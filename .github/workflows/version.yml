name: Generate Version File

on:
  push:
    branches:
      - main

jobs:
  generate-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Setup .NET 8 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Install GitVersion
        run: |
          dotnet tool install --global GitVersion.Tool --version 5.12.0
          echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      - name: Run GitVersion
        id: gitversion
        run: |
          dotnet-gitversion /output json /output buildserver > gitversion.json
          echo "semver=$(jq -r '.SemVer' gitversion.json)" >> $GITHUB_OUTPUT
          echo "major=$(jq -r '.Major' gitversion.json)" >> $GITHUB_OUTPUT
          echo "minor=$(jq -r '.Minor' gitversion.json)" >> $GITHUB_OUTPUT
          echo "patch=$(jq -r '.Patch' gitversion.json)" >> $GITHUB_OUTPUT
          echo "assemblySemVer=$(jq -r '.AssemblySemVer' gitversion.json)" >> $GITHUB_OUTPUT

      - name: Save version to version.txt
        run: echo "${{ steps.gitversion.outputs.semver }}" > version.txt

      - name: Commit and push version.txt if changed
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add version.txt
          if ! git diff --cached --quiet; then
            git commit -m "Update version.txt [skip ci]"
            git push
          else
            echo "No changes in version.txt"
          fi

      - name: Upload version.txt as artifact
        uses: actions/upload-artifact@v4
        with:
          name: version.txt
          path: version.txt